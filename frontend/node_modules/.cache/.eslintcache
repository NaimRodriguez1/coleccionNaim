[{"C:\\Users\\2DAM\\Documents\\ReactsProjects\\coleccionNaim\\frontend\\src\\index.js":"1","C:\\Users\\2DAM\\Documents\\ReactsProjects\\coleccionNaim\\frontend\\src\\App.js":"2","C:\\Users\\2DAM\\Documents\\ReactsProjects\\coleccionNaim\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\2DAM\\Documents\\ReactsProjects\\coleccionNaim\\frontend\\src\\components\\Login.jsx":"4","C:\\Users\\2DAM\\Documents\\ReactsProjects\\coleccionNaim\\frontend\\src\\store\\storelogin.js":"5","C:\\Users\\2DAM\\Documents\\ReactsProjects\\coleccionNaim\\frontend\\src\\components\\Home.jsx":"6","C:\\Users\\2DAM\\Documents\\ReactsProjects\\coleccionNaim\\frontend\\src\\store\\index.js":"7"},{"size":795,"mtime":1699437398587,"results":"8","hashOfConfig":"9"},{"size":591,"mtime":1699951446394,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1699346677182,"results":"11","hashOfConfig":"9"},{"size":3414,"mtime":1699609266475,"results":"12","hashOfConfig":"9"},{"size":690,"mtime":1699437396637,"results":"13","hashOfConfig":"9"},{"size":6951,"mtime":1700047306843,"results":"14","hashOfConfig":"9"},{"size":203,"mtime":1699437403819,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1tw3231",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\2DAM\\Documents\\ReactsProjects\\coleccionNaim\\frontend\\src\\index.js",["39","40"],[],"C:\\Users\\2DAM\\Documents\\ReactsProjects\\coleccionNaim\\frontend\\src\\App.js",[],[],"C:\\Users\\2DAM\\Documents\\ReactsProjects\\coleccionNaim\\frontend\\src\\reportWebVitals.js",[],[],["41","42","43","44","45","46"],"C:\\Users\\2DAM\\Documents\\ReactsProjects\\coleccionNaim\\frontend\\src\\components\\Login.jsx",["47","48","49","50","51"],[],"C:\\Users\\2DAM\\Documents\\ReactsProjects\\coleccionNaim\\frontend\\src\\store\\storelogin.js",[],[],"C:\\Users\\2DAM\\Documents\\ReactsProjects\\coleccionNaim\\frontend\\src\\components\\Home.jsx",["52","53"],[],"import React from 'react'\r\nimport { AppBar, Toolbar, Typography,Container,Grid,Button,Box,Paper,TextField, TableContainer, TableHead, TableRow, TableCell,Table, TableBody } from \"@mui/material\";\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport { loginActions } from '../store/storelogin';\r\nimport { useNavigate,Link } from \"react-router-dom\";\r\nimport { useEffect } from 'react';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { useState } from 'react';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport AddBoxIcon from '@mui/icons-material/AddBox';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\n\r\n\r\nfunction Home() {\r\nconst dispatch = useDispatch()\r\nconst navigate = useNavigate()\r\nconst userData = useSelector (state => state.login)\r\nconst [error,setError]=useState(\"\")\r\nconst isLoggedin = userData.isAutenticated;\r\nconst [item,setItem]=useState({nombre:'',marca:'',tipo:'',precio:''})\r\nconst[tableData,setTableData]=useState([])\r\n\r\n\r\nconst handleSaveItem=(event)=>{\r\nfetch(`http://localhost:3030/addItem?nombre=${item.nombre}&marca=${item.marca}&tipo=${item.tipo}&precio=${item.precio}`)\r\n.then(response => response.json())\r\n.then(response =>{\r\nif(response){\r\n        handleGetItem()\r\n}\r\n}).catch(()=>{\r\n        setError(\"Error al conectar la servidor\")\r\n})\r\n}\r\n\r\n\r\nconst handleGetItem=(event)=>{\r\nfetch(`http://localhost:3030/getItems`)\r\n.then(response => response.json())\r\n.then(response =>{\r\nif(response){\r\nconsole.log(response)\r\n        if(Object.keys(response.data).length !==0){\r\n                setTableData(response.data)\r\n                console.log('Datos table',response.data)\r\n        }else{\r\n                console.log('Error al hacer el select')\r\n        }\r\n}\r\n})\r\n}\r\n\r\n\r\nconst handleDeleteItem=(id)=>{\r\nfetch(`http://localhost:3030/deleteItem?id=${id}`)\r\n.then(response => response.json())\r\n.then(response =>{\r\nif(response){\r\n        handleGetItem()\r\n        alert('Datos eliminados correctamente')\r\n}\r\n}).catch(()=>{\r\n        setError(\"Error al eleiminar datos\")\r\n})\r\n}\r\n\r\n\r\n  // Efecto secundario para redirigir al usuario si no ha iniciado sesión\r\nuseEffect(()=>{\r\nif (!isLoggedin) {\r\nnavigate('/')\r\n}\r\nhandleGetItem()\r\n}, [isLoggedin, navigate])\r\n\r\n\r\n  // Función para manejar el cierre de sesión\r\nconsole.log('Datos del usuario en el store: ', userData)\r\nconst handleLogout = (e) => {\r\ndispatch(loginActions.logout());\r\nnavigate('/');\r\n};\r\n\r\n\r\n\r\n\r\n  // Renderizado del componente Home\r\nreturn <>\r\n<AppBar position='static' sx={{bgcolor:'lightgreen '}}>\r\n        <Toolbar>\r\n        <Grid container spacing={30}>\r\n                <Grid item>\r\n                        <PersonIcon/>\r\n                        <Typography>{userData.userName}</Typography>\r\n                </Grid>\r\n                <Grid item mt={2}>\r\n                        <Link to={'/home'}>Inicio</Link>\r\n                </Grid>\r\n                <Grid item mt={2} >\r\n                        <Link>Informes</Link>\r\n                </Grid>\r\n                <Grid item mt={2}>\r\n                        <Link>Ayuda</Link>\r\n                </Grid>\r\n        </Grid>\r\n        <Grid>\r\n                <Button variant='contained' startIcon={<LogoutIcon/>} sx={{bgcolor:'lightcoral'}} onClick={handleLogout}  >Salir</Button>\r\n        </Grid>\r\n        </Toolbar>\r\n</AppBar>\r\n<Paper elevation={3} sx={{mt:3,ml:10,mr:10}}>\r\n        <Box component='form' autoComplete='off' onSubmit={handleSaveItem}>\r\n        <Grid container spacing={10} mt={0} alignContent={'center'}>\r\n                <Grid item ml={5} >\r\n                        <TextField\r\n                        label='Nombre'\r\n                        required\r\n                        type='text'\r\n                        onChange={(event)=>setItem({...item,nombre:event.target.value})}\r\n                        >\r\n                        </TextField>\r\n                </Grid>\r\n                <Grid item>\r\n                        <TextField\r\n                        label='Marca'\r\n                        required\r\n                        onChange={(event)=>setItem({...item,marca:event.target.value})}\r\n                        >\r\n                        </TextField>\r\n                </Grid>\r\n                <Grid item mb={5}>\r\n                        <TextField\r\n                        label='Tipo'\r\n                        required\r\n                        type='text'\r\n                        onChange={(event)=>setItem({...item,tipo:event.target.value})}\r\n                        >\r\n                        </TextField>\r\n                </Grid>\r\n                <Grid item mb={5} flexGrow={1} >\r\n                        <TextField\r\n                        label='Precio'\r\n                        required\r\n                        onChange={(event)=>setItem({...item,precio:event.target.value})}\r\n                        >\r\n                        </TextField>\r\n                </Grid>\r\n                <Grid item mr={5} mb={5} >\r\n                        <Button type='submit' variant='contained' startIcon={<AddBoxIcon/>}>Insertar</Button>\r\n                </Grid>\r\n        </Grid>\r\n        </Box>\r\n</Paper>\r\n\r\n\r\n<TableContainer sx={{mt:5}}>\r\n        <Table aria-label='Table'>\r\n                <TableHead>\r\n                        <TableRow>\r\n                                <TableCell></TableCell>\r\n                                <TableCell>Nombre</TableCell>\r\n                                <TableCell>Marca</TableCell>\r\n                                <TableCell>Tipo</TableCell>\r\n                                <TableCell>Precio</TableCell>\r\n                        </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                        {tableData.map((row)=> (\r\n                                <TableRow key={row.id}>\r\n                                        <TableCell>\r\n                                                <Button onClick={()=>handleDeleteItem(row.id)}>\r\n                                                        <DeleteForeverIcon/>\r\n                                                </Button>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                                {row.nombre}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                                {row.marca}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                                {row.tipo}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                                {row.precio}\r\n                                        </TableCell>\r\n                                </TableRow>\r\n                        ))}\r\n                </TableBody>\r\n        </Table>\r\n</TableContainer>\r\n</>\r\n}\r\n\r\n\r\n\r\n\r\nexport default Home;","C:\\Users\\2DAM\\Documents\\ReactsProjects\\coleccionNaim\\frontend\\src\\store\\index.js",[],[],{"ruleId":"54","severity":1,"message":"55","line":9,"column":9,"nodeType":"56","messageId":"57","endLine":9,"endColumn":20},{"ruleId":"54","severity":1,"message":"58","line":9,"column":21,"nodeType":"56","messageId":"57","endLine":9,"endColumn":34},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"54","severity":1,"message":"71","line":14,"column":12,"nodeType":"56","messageId":"57","endLine":14,"endColumn":17},{"ruleId":"54","severity":1,"message":"72","line":15,"column":11,"nodeType":"56","messageId":"57","endLine":15,"endColumn":18},{"ruleId":"54","severity":1,"message":"73","line":15,"column":19,"nodeType":"56","messageId":"57","endLine":15,"endColumn":29},{"ruleId":"54","severity":1,"message":"74","line":17,"column":11,"nodeType":"56","messageId":"57","endLine":17,"endColumn":19},{"ruleId":"54","severity":1,"message":"75","line":17,"column":20,"nodeType":"56","messageId":"57","endLine":17,"endColumn":31},{"ruleId":"54","severity":1,"message":"76","line":2,"column":38,"nodeType":"56","messageId":"57","endLine":2,"endColumn":47},{"ruleId":"54","severity":1,"message":"71","line":18,"column":8,"nodeType":"56","messageId":"57","endLine":18,"endColumn":13},"no-unused-vars","'createTheme' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["77"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"'error' is assigned a value but never used.","'usuario' is assigned a value but never used.","'setUsuario' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'Container' is defined but never used.","no-object-constructor"]