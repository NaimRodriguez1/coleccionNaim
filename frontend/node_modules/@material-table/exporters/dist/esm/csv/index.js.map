{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/csv/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,QAAQ,CAAC;AAGpC,MAAM,UAAU,SAAS,CACvB,OAAyB,EACzB,OAAiB,EAAE,EACnB,QAAQ,GAAG,MAAM,EACjB,SAAS,GAAG,GAAG;IAEf,IAAI;QACF,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,iEAAiE;QACjE,6DAA6D;QAC7D,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;YAC1C,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;gBAC/B,yEAAyE;gBACzE,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAC3B,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAClB,GAAG,CAAC,iBAAiB;oBACnB,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,GAAG,CAAC;oBAC5B,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAyB,CAAC,CACvC,CACkB,CAAC;aACvB;SACF;QACD,MAAM,OAAO,GAAG,IAAI,UAAU,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC;QAClD,OAAO;aACJ,YAAY,CAAC,SAAS,CAAC;aACvB,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;aACnD,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAe,CAAC;aAC5C,UAAU,EAAE,CAAC;KACjB;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,wBAAwB,GAAG,EAAE,CAAC,CAAC;KAC9C;AACH,CAAC","sourcesContent":["import { CsvBuilder } from \"filefy\";\nimport { Column } from \"@material-table/core\";\n\nexport function ExportCsv<T extends object>(\n  columns: Array<Column<T>>,\n  data: Array<T> = [],\n  filename = \"data\",\n  delimiter = \",\"\n) {\n  try {\n    let finalData = data;\n    // Grab first item for data array, make sure it is also an array.\n    // If it is an object, 'flatten' it into an array of strings.\n    if (data.length && !Array.isArray(data[0])) {\n      if (typeof data[0] === \"object\") {\n        // Turn data into an array of string arrays, without the `tableData` prop\n        finalData = data.map((row) =>\n          columns.map((col) =>\n            col.exportTransformer\n              ? col.exportTransformer(row)\n              : row[col.field as keyof typeof row]\n          )\n        ) as typeof finalData;\n      }\n    }\n    const builder = new CsvBuilder(filename + \".csv\");\n    builder\n      .setDelimeter(delimiter)\n      .setColumns(columns.map((col) => String(col.title)))\n      .addRows(Array.from(finalData) as string[][])\n      .exportFile();\n  } catch (err) {\n    console.error(`error in ExportCsv : ${err}`);\n  }\n}\n"]}